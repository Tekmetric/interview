{
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/stylistic",
		"plugin:@typescript-eslint/strict",
		"plugin:react/recommended",
		"plugin:react/jsx-runtime",
		"plugin:prettier/recommended",
		"plugin:sonarjs/recommended-legacy",
		"plugin:import/recommended",
		"plugin:jsx-a11y/strict"
	],
	"env": {
		"browser": true,
		"es2021": true,
		"node": true,
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"project": "./tsconfig.json",
	},
	"settings": {
		"react": {
			"version": "detect",
			"runtime": "automatic",
		},
		"import/resolver": {
			"typescript": true,
			"node": {
				"extensions": [".js", ".jsx", ".ts", ".tsx"],
			},
		},
	},
	"plugins": ["react-hooks", "unicorn"],
	"rules": {
		"unicorn/prevent-abbreviations": [
			"error",
			{
				"allowList": {
					"ref": true,
					"e": true,
					"err": true,
					"Ref": true,
					"Refs": true,
					"props": true,
					"Props": true,
					"param": true,
					"params": true,
					"Param": true,
					"Params": true,
					"docs": true,
					"el": true,
					"El": true,
					"args": true,
					"prev": true,
					"Prev": true,
					"val": true,
					"Val": true,
					"acc": true,
				},
			},
		],
		"import/order": [
			"error",
			{
				"groups": [
					["builtin", "external"],
					["internal"],
					["parent", "sibling", "index"],
					"object",
				],
				"pathGroups": [
					{
						"pattern": "_{*,*/**}",
						"group": "internal",
						"position": "after",
					},
				],
				"pathGroupsExcludedImportTypes": ["builtin"],
				"newlines-between": "always",
			},
		],
		"curly": "error",
		"arrow-body-style": ["error", "as-needed"],
		"default-param-last": "error",
		"no-lone-blocks": "error",
		"no-lonely-if": "error",
		"no-alert": "error",
		"no-nested-ternary": "error",
		"import/no-extraneous-dependencies": "error",
		"@typescript-eslint/consistent-type-imports": [
			"error",
			{ "fixStyle": "inline-type-imports" },
		],
		"@typescript-eslint/method-signature-style": "error",
		"@typescript-eslint/no-confusing-void-expression": "error",
		"padding-line-between-statements": [
			"error",
			{ "blankLine": "always", "prev": "*", "next": "return" },
			{ "blankLine": "always", "prev": "function", "next": "*" },
			{ "blankLine": "always", "prev": "*", "next": "function" },
			{ "blankLine": "always", "prev": "*", "next": "if" },
			{ "blankLine": "always", "prev": "*", "next": "for" },
			{ "blankLine": "always", "prev": "*", "next": "while" },
			{ "blankLine": "always", "prev": "*", "next": "switch" },
			{ "blankLine": "always", "prev": "*", "next": "try" },
			{ "blankLine": "always", "prev": "if", "next": "*" },
			{ "blankLine": "always", "prev": "for", "next": "*" },
			{ "blankLine": "always", "prev": "while", "next": "*" },
			{ "blankLine": "always", "prev": "switch", "next": "*" },
			{ "blankLine": "always", "prev": "try", "next": "*" },
			{ "blankLine": "always", "prev": "import", "next": "export" },
			// anything between const/ let space after
			{ "blankLine": "always", "prev": "const", "next": "*" },
			{ "blankLine": "always", "prev": "let", "next": "*" },
			{ "blankLine": "any", "prev": "const", "next": "let" },
			{ "blankLine": "any", "prev": "let", "next": "const" },
			{ "blankLine": "any", "prev": "let", "next": "let" },
			{ "blankLine": "any", "prev": "const", "next": "const" },
		],
		"unicorn/no-empty-file": "error",
		"react/jsx-curly-brace-presence": "error",
		"react/no-array-index-key": "off",
		"eqeqeq": ["error", "always"],
		"no-plusplus": "error",
		"radix": "error",
		"object-shorthand": "error",
		"no-useless-return": "error",
		"no-else-return": "error",
		"require-await": "error",
		"no-param-reassign": "error",
		"no-use-before-define": "off",
		"camelcase": "error",
		"@typescript-eslint/no-empty-function": "off",
		"no-console": "warn",
		"react/jsx-filename-extension": [
			1,
			{ "extensions": [".js", ".jsx", ".ts", ".tsx"] },
		],
		"linebreak-style": ["error", "unix"],
		"quotes": ["error", "single"],
		"semi": ["error", "always"],
		"unicorn/numeric-separators-style": "warn",
		"unicorn/prefer-ternary": "error",
		"unicorn/prefer-logical-operator-over-ternary": "error",
		"unicorn/explicit-length-check": "error",
		"unicorn/prefer-number-properties": "error",
		"unicorn/no-nested-ternary": "error",
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/ban-ts-comment": [
			"error",
			{
				"ts-expect-error": "allow-with-description",
				"ts-ignore": "allow-with-description",
				"ts-nocheck": "allow-with-description",
				"ts-check": "allow-with-description",
			},
		],
		"react/self-closing-comp": "error",
		"react/prefer-exact-props": "error",
		"react/require-default-props": [
			"warn",
			{
				"functions": "defaultArguments",
			},
		],
		"react-hooks/exhaustive-deps": "off", // rule is too harsh for now
		"react/boolean-prop-naming": "error",
		"react/function-component-definition": "error",
		"react/jsx-boolean-value": "error",
		"react/jsx-closing-bracket-location": ["error", "tag-aligned"],
		"react/jsx-fragments": ["error"],
		"react/jsx-no-useless-fragment": "error",
		"react/jsx-pascal-case": "error",
		"react/no-unstable-nested-components": "error",
		"react/no-unused-prop-types": "error",
		"react/prefer-stateless-function": "error",
		"no-duplicate-imports": "error",
		"@typescript-eslint/switch-exhaustiveness-check": [
			"error",
			{ "considerDefaultExhaustiveForUnions": true },
		],
		"sonarjs/no-nested-functions": "off",
		"sonarjs/no-ignored-exceptions": "off",
		"sonarjs/function-return-type": "off",
		"sonarjs/no-selector-parameter": "off",
		"react/no-unescaped-entities": "off",
		"import/no-unresolved": ["error", { "ignore": ["^_"] }],
		"sonarjs/sonar-prefer-read-only-props": "off",
		"sonarjs/prefer-nullish-coalescing": "off",
		"sonarjs/todo-tag": "off",
		"sonarjs/no-commented-code": "off",
		"sonarjs/prefer-read-only-props": "off",
		"sonarjs/constructor-for-side-effects": "off",
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"caughtErrors": "none",
			},
		],
		"@typescript-eslint/no-empty-object-type": "off",
	},
	"overrides": [
		{
			"files": ["**/*.slice.*"],
			"rules": {
				"no-param-reassign": "off",
			},
		},
		{
			"files": [
				"rspack.config.js",
				"./types/**",
			],
			"rules": {
				"@typescript-eslint/no-var-requires": "off",
				"global-require": "off",
				"import/no-extraneous-dependencies": "off",
				"no-magic-numbers": "off",
				"camelcase": "off",
				"@typescript-eslint/no-require-imports": "off",
			},
		},
	],
}
